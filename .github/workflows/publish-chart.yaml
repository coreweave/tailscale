---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Charts: Publish to GHCR OCI"

on:
  workflow_dispatch: {}
  pull_request:
    branches: ["coreweave"]
    types: ["opened", "synchronize", "reopened"]
    paths:
      - .github/workflows/publish-chart.yaml
      - "**/*"
  push:
    branches:
      - coreweave
    paths:
      - .github/workflows/publish-chart.yaml
      - "**/*"

jobs:
  publish-charts:
    name: Publish chart
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set VERSION from VERSION.txt
        id: set_version
        run: echo "VERSION=$(cat VERSION.txt)" >> $GITHUB_ENV

      - name: Set HELM_VERSION
        run: echo "HELM_VERSION=v${{ env.VERSION }}-${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Package CRDs
        shell: bash
        run: |
          cat <<EOF > cmd/k8s-operator/deploy/chart/templates/crds.yaml
          {{- if .Values.installCRDs }}
          EOF
          for file in cmd/k8s-operator/deploy/crds/*.yaml; do
            echo "---" >> cmd/k8s-operator/deploy/chart/templates/crds.yaml
            cat "$file" >> cmd/k8s-operator/deploy/chart/templates/crds.yaml
          done
          cat <<EOF >> cmd/k8s-operator/deploy/chart/templates/crds.yaml
          {{- end }}
          EOF

      - name: Package & Push Helm Charts
        shell: bash
        if: ${{ always() && format('refs/heads/{0}', github.event.repository.default_branch) == github.ref }}
        run: |
          helm package cmd/k8s-operator/deploy/chart --dependency-update --version ${{ env.HELM_VERSION }} --app-version ${{ env.HELM_VERSION }}
          pkg=$(ls tailscale-operator-*.tgz)
          helm push "${pkg}" oci://ghcr.io/${{ github.repository }}/chart
